plugins {
    id 'org.springframework.boot' version '2.6.1' apply false
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'idea'
    if (project.name.endsWith('-gateway') || project.name.endsWith('-scheduler')) {
        apply plugin: 'java'
    } else {
        apply plugin: 'java-library'
    }

    group 'net.sunshow.badge'
    version '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/nexus/content/groups/public/'
        }
    }

    ext {
        lombokVersion = '1.18.20'
        slf4jVersion = '1.7.31'
        guavaVersion = '30.1.1-jre'
        commonsLang3Version = '3.12.0'
        commonsBeanUtilsVersion = '1.9.4'
        commonsIOVersion = '2.11.0'
        dozerVersion = '6.5.0'
        janinoVersion = '3.1.6'
        commonsTextVersion = '1.9'
    }

    dependencyManagement {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            cacheDynamicVersionsFor 0, 'seconds'
        }

        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }

        dependencies {
            dependency "org.projectlombok:lombok:${lombokVersion}"

            dependency "org.slf4j:slf4j-api:${slf4jVersion}"

            dependency "com.google.guava:guava:${guavaVersion}"
            dependency "commons-beanutils:commons-beanutils:${commonsBeanUtilsVersion}"
            dependency "org.apache.commons:commons-lang3:${commonsLang3Version}"
            dependency "com.github.dozermapper:dozer-core:${dozerVersion}"
            dependency "org.codehaus.janino:janino:${janinoVersion}"

            dependency "org.apache.commons:commons-text:${commonsTextVersion}"
            dependency "commons-io:commons-io:${commonsIOVersion}"
        }
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.slf4j:slf4j-api'
    }

    test {
        useJUnitPlatform()
    }
}